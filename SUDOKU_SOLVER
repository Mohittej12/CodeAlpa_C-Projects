//SUDOKU SOLVER- Program Code
#include <iostream>
using namespace std;

int board[9][9] = {
    {5,3,0, 0,7,0, 0,0,0},
    {6,0,0, 1,9,5, 0,0,0},
    {0,9,8, 0,0,0, 0,6,0},

    {8,0,0, 0,6,0, 0,0,3},
    {4,0,0, 8,0,3, 0,0,1},
    {7,0,0, 0,2,0, 0,0,6},

    {0,6,0, 0,0,0, 2,8,0},
    {0,0,0, 4,1,9, 0,0,5},
    {0,0,0, 0,8,0, 0,7,9}
};

bool isValid(int r, int c, int num) {
    for (int i = 0; i < 9; i++)
        if (board[r][i] == num || board[i][c] == num ||
            board[r - r % 3 + i / 3][c - c % 3 + i % 3] == num)
            return false;
    return true;
}

bool solve() {
    for (int r = 0; r < 9; r++)
        for (int c = 0; c < 9; c++)
            if (board[r][c] == 0) {
                for (int n = 1; n <= 9; n++) {
                    if (isValid(r, c, n)) {
                        board[r][c] = n;
                        if (solve()) return true;
                        board[r][c] = 0;
                    }
                }
                return false;
            }
    return true;
}

void print() {
    for (int r = 0; r < 9; r++) {
        for (int c = 0; c < 9; c++)
            cout << board[r][c] << " ";
        cout << "\n";
    }
}

int main() {
    cout << "Original Sudoku:\n";
    print();

    if (solve()) {
        cout << "\nSolved Sudoku:\n";
        print();
    } else
        cout << "No solution found.\n";

    return 0;
}

//Program Output
Original Sudoku:
5 3 0 0 7 0 0 0 0
6 0 0 1 9 5 0 0 0
0 9 8 0 0 0 0 6 0
8 0 0 0 6 0 0 0 3
4 0 0 8 0 3 0 0 1
7 0 0 0 2 0 0 0 6
0 6 0 0 0 0 2 8 0
0 0 0 4 1 9 0 0 5
0 0 0 0 8 0 0 7 9

Solved Sudoku:
5 3 4 6 7 8 9 1 2
6 7 2 1 9 5 3 4 8
1 9 8 3 4 2 5 6 7
8 5 9 7 6 1 4 2 3
4 2 6 8 5 3 7 9 1
7 1 3 9 2 4 8 5 6
9 6 1 5 3 7 2 8 4
2 8 7 4 1 9 6 3 5
3 4 5 2 8 6 1 7 9

--------------------------------
Process exited after 0.1169 seconds with return value 0
Press any key to continue . . .


